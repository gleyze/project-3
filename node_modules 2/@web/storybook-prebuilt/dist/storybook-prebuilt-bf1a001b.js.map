{"version":3,"file":"storybook-prebuilt-bf1a001b.js","sources":["../node_modules/memoizerific/memoizerific.js"],"sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.memoizerific = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\nmodule.exports = function(forceSimilar) {\n\tif (typeof Map !== 'function' || forceSimilar) {\n\t\tvar Similar = _dereq_('./similar');\n\t\treturn new Similar();\n\t}\n\telse {\n\t\treturn new Map();\n\t}\n}\n\n},{\"./similar\":2}],2:[function(_dereq_,module,exports){\nfunction Similar() {\n\tthis.list = [];\n\tthis.lastItem = undefined;\n\tthis.size = 0;\n\n\treturn this;\n}\n\nSimilar.prototype.get = function(key) {\n\tvar index;\n\n\tif (this.lastItem && this.isEqual(this.lastItem.key, key)) {\n\t\treturn this.lastItem.val;\n\t}\n\n\tindex = this.indexOf(key);\n\tif (index >= 0) {\n\t\tthis.lastItem = this.list[index];\n\t\treturn this.list[index].val;\n\t}\n\n\treturn undefined;\n};\n\nSimilar.prototype.set = function(key, val) {\n\tvar index;\n\n\tif (this.lastItem && this.isEqual(this.lastItem.key, key)) {\n\t\tthis.lastItem.val = val;\n\t\treturn this;\n\t}\n\n\tindex = this.indexOf(key);\n\tif (index >= 0) {\n\t\tthis.lastItem = this.list[index];\n\t\tthis.list[index].val = val;\n\t\treturn this;\n\t}\n\n\tthis.lastItem = { key: key, val: val };\n\tthis.list.push(this.lastItem);\n\tthis.size++;\n\n\treturn this;\n};\n\nSimilar.prototype.delete = function(key) {\n\tvar index;\n\n\tif (this.lastItem && this.isEqual(this.lastItem.key, key)) {\n\t\tthis.lastItem = undefined;\n\t}\n\n\tindex = this.indexOf(key);\n\tif (index >= 0) {\n\t\tthis.size--;\n\t\treturn this.list.splice(index, 1)[0];\n\t}\n\n\treturn undefined;\n};\n\n\n// important that has() doesn't use get() in case an existing key has a falsy value, in which case has() would return false\nSimilar.prototype.has = function(key) {\n\tvar index;\n\n\tif (this.lastItem && this.isEqual(this.lastItem.key, key)) {\n\t\treturn true;\n\t}\n\n\tindex = this.indexOf(key);\n\tif (index >= 0) {\n\t\tthis.lastItem = this.list[index];\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\nSimilar.prototype.forEach = function(callback, thisArg) {\n\tvar i;\n\tfor (i = 0; i < this.size; i++) {\n\t\tcallback.call(thisArg || this, this.list[i].val, this.list[i].key, this);\n\t}\n};\n\nSimilar.prototype.indexOf = function(key) {\n\tvar i;\n\tfor (i = 0; i < this.size; i++) {\n\t\tif (this.isEqual(this.list[i].key, key)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\n\n// check if the numbers are equal, or whether they are both precisely NaN (isNaN returns true for all non-numbers)\nSimilar.prototype.isEqual = function(val1, val2) {\n\treturn val1 === val2 || (val1 !== val1 && val2 !== val2);\n};\n\nmodule.exports = Similar;\n},{}],3:[function(_dereq_,module,exports){\nvar MapOrSimilar = _dereq_('map-or-similar');\n\nmodule.exports = function (limit) {\n\tvar cache = new MapOrSimilar(undefined === 'true'),\n\t\tlru = [];\n\n\treturn function (fn) {\n\t\tvar memoizerific = function () {\n\t\t\tvar currentCache = cache,\n\t\t\t\tnewMap,\n\t\t\t\tfnResult,\n\t\t\t\targsLengthMinusOne = arguments.length - 1,\n\t\t\t\tlruPath = Array(argsLengthMinusOne + 1),\n\t\t\t\tisMemoized = true,\n\t\t\t\ti;\n\n\t\t\tif ((memoizerific.numArgs || memoizerific.numArgs === 0) && memoizerific.numArgs !== argsLengthMinusOne + 1) {\n\t\t\t\tthrow new Error('Memoizerific functions should always be called with the same number of arguments');\n\t\t\t}\n\n\t\t\t// loop through each argument to traverse the map tree\n\t\t\tfor (i = 0; i < argsLengthMinusOne; i++) {\n\t\t\t\tlruPath[i] = {\n\t\t\t\t\tcacheItem: currentCache,\n\t\t\t\t\targ: arguments[i]\n\t\t\t\t};\n\n\t\t\t\t// climb through the hierarchical map tree until the second-last argument has been found, or an argument is missing.\n\t\t\t\t// if all arguments up to the second-last have been found, this will potentially be a cache hit (determined later)\n\t\t\t\tif (currentCache.has(arguments[i])) {\n\t\t\t\t\tcurrentCache = currentCache.get(arguments[i]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tisMemoized = false;\n\n\t\t\t\t// make maps until last value\n\t\t\t\tnewMap = new MapOrSimilar(undefined === 'true');\n\t\t\t\tcurrentCache.set(arguments[i], newMap);\n\t\t\t\tcurrentCache = newMap;\n\t\t\t}\n\n\t\t\t// we are at the last arg, check if it is really memoized\n\t\t\tif (isMemoized) {\n\t\t\t\tif (currentCache.has(arguments[argsLengthMinusOne])) {\n\t\t\t\t\tfnResult = currentCache.get(arguments[argsLengthMinusOne]);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tisMemoized = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!isMemoized) {\n\t\t\t\tfnResult = fn.apply(null, arguments);\n\t\t\t\tcurrentCache.set(arguments[argsLengthMinusOne], fnResult);\n\t\t\t}\n\n\t\t\tif (limit > 0) {\n\t\t\t\tlruPath[argsLengthMinusOne] = {\n\t\t\t\t\tcacheItem: currentCache,\n\t\t\t\t\targ: arguments[argsLengthMinusOne]\n\t\t\t\t};\n\n\t\t\t\tif (isMemoized) {\n\t\t\t\t\tmoveToMostRecentLru(lru, lruPath);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlru.push(lruPath);\n\t\t\t\t}\n\n\t\t\t\tif (lru.length > limit) {\n\t\t\t\t\tremoveCachedResult(lru.shift());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmemoizerific.wasMemoized = isMemoized;\n\t\t\tmemoizerific.numArgs = argsLengthMinusOne + 1;\n\n\t\t\treturn fnResult;\n\t\t};\n\n\t\tmemoizerific.limit = limit;\n\t\tmemoizerific.wasMemoized = false;\n\t\tmemoizerific.cache = cache;\n\t\tmemoizerific.lru = lru;\n\n\t\treturn memoizerific;\n\t};\n};\n\n// move current args to most recent position\nfunction moveToMostRecentLru(lru, lruPath) {\n\tvar lruLen = lru.length,\n\t\tlruPathLen = lruPath.length,\n\t\tisMatch,\n\t\ti, ii;\n\n\tfor (i = 0; i < lruLen; i++) {\n\t\tisMatch = true;\n\t\tfor (ii = 0; ii < lruPathLen; ii++) {\n\t\t\tif (!isEqual(lru[i][ii].arg, lruPath[ii].arg)) {\n\t\t\t\tisMatch = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (isMatch) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tlru.push(lru.splice(i, 1)[0]);\n}\n\n// remove least recently used cache item and all dead branches\nfunction removeCachedResult(removedLru) {\n\tvar removedLruLen = removedLru.length,\n\t\tcurrentLru = removedLru[removedLruLen - 1],\n\t\ttmp,\n\t\ti;\n\n\tcurrentLru.cacheItem.delete(currentLru.arg);\n\n\t// walk down the tree removing dead branches (size 0) along the way\n\tfor (i = removedLruLen - 2; i >= 0; i--) {\n\t\tcurrentLru = removedLru[i];\n\t\ttmp = currentLru.cacheItem.get(currentLru.arg);\n\n\t\tif (!tmp || !tmp.size) {\n\t\t\tcurrentLru.cacheItem.delete(currentLru.arg);\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\n// check if the numbers are equal, or whether they are both precisely NaN (isNaN returns true for all non-numbers)\nfunction isEqual(val1, val2) {\n\treturn val1 === val2 || (val1 !== val1 && val2 !== val2);\n}\n},{\"map-or-similar\":1}]},{},[3])(3)\n});"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","_dereq_","module","forceSimilar","Map","Similar","list","lastItem","undefined","size","this","prototype","get","key","index","isEqual","val","indexOf","set","push","delete","splice","has","forEach","callback","thisArg","val1","val2","MapOrSimilar","moveToMostRecentLru","lru","lruPath","isMatch","ii","lruLen","lruPathLen","arg","removeCachedResult","removedLru","tmp","removedLruLen","currentLru","cacheItem","limit","cache","fn","memoizerific","newMap","fnResult","currentCache","argsLengthMinusOne","arguments","Array","isMemoized","numArgs","apply","shift","wasMemoized"],"mappings":"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"}